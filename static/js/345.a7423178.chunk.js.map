{"version":3,"file":"static/js/345.a7423178.chunk.js","mappings":"qNAOA,MAqBA,EArBiCA,KAE/B,MACMC,GADkBC,EAAAA,EAAAA,MACED,EAE1B,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,SAAS,KAAIC,UACtBH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAIJ,UACxBK,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACJ,GAAI,CAAEK,EAAG,EAAGC,aAAc,GAAIR,SAAA,EACnCH,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,SAASC,cAAY,EAAAb,SAChEL,EAAE,wBAA0B,qBAE/BE,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,QAAQE,MAAM,SAAQZ,SACvCL,EAAE,2BAA6B,6CAI5B,C","sources":["pages/ForgotPassword.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, Container, Paper } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\n// Type definition for translation function to prevent infinite type instantiation\ntype TFunction = (key: string) => string;\n\nconst ForgotPassword: React.FC = () => {\n  // Using a different approach to prevent type instantiation issues\n  const translationHook = useTranslation();\n  const t = translationHook.t as unknown as TFunction;\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8, mb: 4 }}>\n        <Paper sx={{ p: 4, borderRadius: 2 }}>\n          <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\n            {t('auth.forgotPassword') || 'Forgot Password'}\n          </Typography>\n          <Typography variant=\"body1\" align=\"center\">\n            {t('auth.passwordResetForm') || 'Password reset form coming soon...'}\n          </Typography>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ForgotPassword; "],"names":["ForgotPassword","t","useTranslation","_jsx","Container","maxWidth","children","Box","sx","mt","mb","_jsxs","Paper","p","borderRadius","Typography","variant","component","align","gutterBottom"],"sourceRoot":""}