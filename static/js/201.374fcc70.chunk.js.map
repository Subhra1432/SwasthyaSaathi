{"version":3,"file":"static/js/201.374fcc70.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/icons-material/esm/AccountBalanceWallet.js","../node_modules/@mui/icons-material/esm/CallReceived.js","../node_modules/@mui/icons-material/esm/CallMade.js","../node_modules/@mui/icons-material/esm/Receipt.js","pages/Finance.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'AccountBalanceWallet');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 5.41 18.59 4 7 15.59V9H5v10h10v-2H8.41z\"\n}), 'CallReceived');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5z\"\n}), 'CallMade');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z\"\n}), 'Receipt');","import React, { useState } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper, \n  Button, \n  Table, \n  TableBody, \n  TableCell, \n  TableContainer, \n  TableHead, \n  TableRow,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Divider\n} from '@mui/material';\nimport { \n  AttachMoney as MoneyIcon, \n  Add as AddIcon,\n  CallMade as ExpenseIcon,\n  CallReceived as IncomeIcon,\n  Receipt as ReceiptIcon,\n  AccountBalanceWallet as WalletIcon\n} from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n\n// Type definition for translation function to prevent infinite type instantiation\ntype TFunction = (key: string) => string;\n\n// Mock transaction interface\ninterface Transaction {\n  id: number;\n  date: string;\n  description: string;\n  amount: number;\n  type: 'income' | 'expense';\n  category: string;\n  status: 'completed' | 'pending' | 'failed';\n}\n\nconst Finance: React.FC = () => {\n  // Using a different approach to prevent type instantiation issues\n  const translationHook = useTranslation();\n  const t = translationHook.t as unknown as TFunction;\n  const navigate = useNavigate();\n\n  // Mock transaction data\n  const [transactions] = useState<Transaction[]>([\n    {\n      id: 1,\n      date: '2023-05-10',\n      description: 'Monthly stipend',\n      amount: 5000,\n      type: 'income',\n      category: 'Stipend',\n      status: 'completed'\n    },\n    {\n      id: 2,\n      date: '2023-05-08',\n      description: 'Purchase of first aid kits',\n      amount: 1200,\n      type: 'expense',\n      category: 'Medical Supplies',\n      status: 'completed'\n    },\n    {\n      id: 3,\n      date: '2023-05-05',\n      description: 'Health camp sponsorship',\n      amount: 3000,\n      type: 'income',\n      category: 'Sponsorship',\n      status: 'completed'\n    },\n    {\n      id: 4,\n      date: '2023-05-01',\n      description: 'Transportation for village outreach',\n      amount: 500,\n      type: 'expense',\n      category: 'Transportation',\n      status: 'completed'\n    },\n    {\n      id: 5,\n      date: '2023-04-28',\n      description: 'Reimbursement claim for training',\n      amount: 750,\n      type: 'income',\n      category: 'Reimbursement',\n      status: 'pending'\n    }\n  ]);\n\n  // Calculate summary statistics\n  const totalIncome = transactions\n    .filter(t => t.type === 'income' && t.status === 'completed')\n    .reduce((sum, t) => sum + t.amount, 0);\n  \n  const totalExpense = transactions\n    .filter(t => t.type === 'expense' && t.status === 'completed')\n    .reduce((sum, t) => sum + t.amount, 0);\n  \n  const balance = totalIncome - totalExpense;\n\n  const handleAddTransaction = () => {\n    navigate('/finance/add');\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\" component=\"h1\">\n          {t('finance.title')}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleAddTransaction}\n        >\n          {t('finance.addTransaction')}\n        </Button>\n      </Box>\n\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" mb={4}>\n        {t('finance.description') || 'Manage and track all your financial activities related to community health work.'}\n      </Typography>\n\n      {/* Financial Summary Cards */}\n      <Grid container spacing={3} mb={4}>\n        <Grid item xs={12} md={4}>\n          <Paper \n            elevation={0} \n            sx={{ \n              p: 2, \n              borderRadius: 2, \n              background: '#e3f2fd',\n              height: '100%'\n            }}\n          >\n            <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                <WalletIcon color=\"primary\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\" color=\"primary\">Balance</Typography>\n              </Box>\n              <Typography variant=\"h4\" fontWeight=\"bold\" mb={1}>₹{balance.toLocaleString()}</Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">Current balance as of today</Typography>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Paper \n            elevation={0} \n            sx={{ \n              p: 2, \n              borderRadius: 2, \n              background: '#e8f5e9',\n              height: '100%'\n            }}\n          >\n            <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                <IncomeIcon color=\"success\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\" color=\"success.main\">Income</Typography>\n              </Box>\n              <Typography variant=\"h4\" fontWeight=\"bold\" color=\"success.main\" mb={1}>\n                ₹{totalIncome.toLocaleString()}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">Total income this month</Typography>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Paper \n            elevation={0} \n            sx={{ \n              p: 2, \n              borderRadius: 2, \n              background: '#ffebee',\n              height: '100%'\n            }}\n          >\n            <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                <ExpenseIcon color=\"error\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\" color=\"error\">Expenses</Typography>\n              </Box>\n              <Typography variant=\"h4\" fontWeight=\"bold\" color=\"error\" mb={1}>\n                ₹{totalExpense.toLocaleString()}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">Total expenses this month</Typography>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Recent Transactions */}\n      <Box mb={4}>\n        <Typography variant=\"h5\" mb={2}>Recent Transactions</Typography>\n        <TableContainer component={Paper} variant=\"outlined\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Date</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {transactions.map((transaction) => (\n                <TableRow key={transaction.id} hover>\n                  <TableCell>{new Date(transaction.date).toLocaleDateString()}</TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      {transaction.type === 'income' ? \n                        <IncomeIcon color=\"success\" fontSize=\"small\" sx={{ mr: 1 }} /> : \n                        <ExpenseIcon color=\"error\" fontSize=\"small\" sx={{ mr: 1 }} />}\n                      {transaction.description}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{transaction.category}</TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body2\"\n                      color={transaction.type === 'income' ? 'success.main' : 'error'}\n                      fontWeight=\"medium\"\n                    >\n                      {transaction.type === 'income' ? '+' : '-'}₹{transaction.amount.toLocaleString()}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Chip \n                      label={transaction.status} \n                      size=\"small\"\n                      color={\n                        transaction.status === 'completed' ? 'success' : \n                        transaction.status === 'pending' ? 'warning' : 'error'\n                      }\n                      variant=\"outlined\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n\n      {/* Financial Reports Card */}\n      <Card variant=\"outlined\" sx={{ mb: 4 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={2}>\n            <ReceiptIcon color=\"primary\" sx={{ mr: 1 }} />\n            <Typography variant=\"h6\">Financial Reports</Typography>\n          </Box>\n          <Divider sx={{ mb: 2 }} />\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={4}>\n              <Button \n                variant=\"outlined\" \n                fullWidth\n                onClick={() => alert('Monthly report would be generated')}\n              >\n                Monthly Report\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Button \n                variant=\"outlined\" \n                fullWidth\n                onClick={() => alert('Quarterly report would be generated')}\n              >\n                Quarterly Report\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Button \n                variant=\"outlined\" \n                fullWidth\n                onClick={() => alert('Custom report would be generated')}\n              >\n                Custom Report\n              </Button>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Finance; ","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","createSvgIcon","d","Finance","t","useTranslation","navigate","useNavigate","transactions","useState","id","date","description","amount","type","category","status","totalIncome","filter","reduce","sum","totalExpense","balance","_jsxs","Box","children","display","justifyContent","alignItems","mb","Typography","variant","component","Button","color","startIcon","AddIcon","onClick","handleAddTransaction","Grid","container","spacing","item","xs","md","sx","p","borderRadius","background","height","flexDirection","WalletIcon","mr","fontWeight","toLocaleString","IncomeIcon","ExpenseIcon","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","transaction","hover","Date","toLocaleDateString","fontSize","Chip","label","size","Card","CardContent","ReceiptIcon","Divider","sm","fullWidth","alert","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","as"],"sourceRoot":""}