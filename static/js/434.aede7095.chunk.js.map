{"version":3,"file":"static/js/434.aede7095.chunk.js","mappings":"0VAyCA,MA2TA,EA3T+BA,KAE7B,MACMC,GADkBC,EAAAA,EAAAA,MACED,EAEpBE,GAAWC,EAAAA,EAAAA,OAGVC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAwB,CAChEC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,KAAM,SACNC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,SAAU,GACVC,MAAO,MAIFC,EAAQC,IAAaZ,EAAAA,EAAAA,UAAiC,CAAC,GAOxDa,EAAgBC,IACpB,MAAM,KAAEb,EAAI,MAAEc,GAAUD,EAAEE,OAC1BjB,GAAiBkB,IAAI,IAChBA,EACH,CAAChB,GAAOc,MAINJ,EAAOV,IACTW,GAAUK,IACR,MAAMC,EAAY,IAAKD,GAEvB,cADOC,EAAUjB,GACViB,CAAS,GAEpB,EAkEF,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EAEFC,EAAAA,EAAAA,KAACF,EAAAA,EAAG,CAACG,GAAI,EAAEF,UACTF,EAAAA,EAAAA,MAACK,EAAAA,EAAW,CAACC,UAAU,SAAI,aAAW,aAAYJ,SAAA,EAChDC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,aAAaC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WAAYT,SACvE3B,EAAE,2BAEL4B,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,aAAaC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WAAYT,SACvE3B,EAAE,sBAEL4B,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACD,MAAM,cAAaT,SAAE3B,EAAE,6BAKvCyB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACY,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAASX,GAAI,EAAEF,SAAA,EAC3EC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACI,QAAQ,KAAId,SACrB3B,EAAE,wBAEL4B,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CACLC,WAAWf,EAAAA,EAAAA,KAACgB,EAAAA,EAAa,IACzBC,QA3GWC,KACjB5C,EAAS,aAAa,EA2GhBuC,QAAQ,WAAUd,SAEjB3B,EAAE,qBAKP4B,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,EAAGpB,GAAI,GAAIF,UACzBC,EAAAA,EAAAA,KAAA,QAAMsB,SA3CU9B,IACpBA,EAAE+B,iBA1CiBC,MACnB,MAAM5B,EAAoC,CAAC,EA2B3C,GAzBKpB,EAAcG,KAAK8C,SACtB7B,EAAUjB,KAAOP,EAAE,wBAA0B,oBAG1CI,EAAcI,SAAS6C,SAC1B7B,EAAUhB,SAAWR,EAAE,wBAA0B,wBAG9CI,EAAcK,SAAS4C,QAEjBC,MAAMC,OAAOnD,EAAcK,YAAc8C,OAAOnD,EAAcK,UAAY,KACnFe,EAAUf,SAAWT,EAAE,wBAA0B,0CAFjDwB,EAAUf,SAAWT,EAAE,wBAA0B,uBAK9CI,EAAcM,KAAK2C,SACtB7B,EAAUd,KAAOV,EAAE,wBAA0B,oBAG1CI,EAAcO,aAAa0C,QAErBC,MAAMC,OAAOnD,EAAcO,gBAAkB4C,OAAOnD,EAAcO,cAAgB,KAC3Fa,EAAUb,aAAeX,EAAE,wBAA0B,+CAFrDwB,EAAUb,aAAeX,EAAE,wBAA0B,4BAMnDI,EAAcQ,WAAY,CAC5B,MAAM4C,EAAQ,IAAIC,KACC,IAAIA,KAAKrD,EAAcQ,YACzB4C,IACfhC,EAAUZ,WAAaZ,EAAE,0BAA4B,oCAEzD,CAGA,OADAkB,EAAUM,GAC+B,IAAlCkC,OAAOC,KAAKnC,GAAWoC,MAAY,EAOtCR,KAEFS,QAAQC,IAAI,kBAAmB1D,GAG/BF,EAAS,aAAc,CAAE6D,MAAO,CAAEC,SAAS,EAAMC,QAAS,6BAC5D,EAkCiCtC,UAC3BF,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEzC,SAAA,EAEzBF,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG3C,SAAA,EAChBC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACI,QAAQ,KAAK8B,cAAY,EAAA5C,SAClC3B,EAAE,4BAEL4B,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,CAACxB,GAAI,CAAEnB,GAAI,SAGrBD,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTC,UAAQ,EACRC,MAAO7E,EAAE,kBACTO,KAAK,OACLc,MAAOjB,EAAcG,KACrBuE,SAAU3D,EACV4D,QAAS9D,EAAOV,KAChByE,WAAY/D,EAAOV,UAIvBqB,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTC,UAAQ,EACRC,MAAO7E,EAAE,sBACTO,KAAK,WACLc,MAAOjB,EAAcI,SACrBsE,SAAU3D,EACV4D,QAAS9D,EAAOT,SAChBwE,WAAY/D,EAAOT,cAIvBoB,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTC,UAAQ,EACRC,MAAO7E,EAAE,sBACTO,KAAK,WACL0E,KAAK,SACL5D,MAAOjB,EAAcK,SACrBqE,SAAU3D,EACV4D,QAAS9D,EAAOR,SAChBuE,WAAY/D,EAAOR,SACnByE,WAAY,CACVC,WAAY,CAAEC,IAAK,SAKzBxD,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBF,EAAAA,EAAAA,MAAC4D,EAAAA,EAAW,CAACV,WAAS,EAACC,UAAQ,EAACG,QAAS9D,EAAOP,KAAKiB,SAAA,EACnDC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAAA3D,SAAE3B,EAAE,qBACfyB,EAAAA,EAAAA,MAAC8D,EAAAA,EAAM,CACLhF,KAAK,OACLc,MAAOjB,EAAcM,KACrBmE,MAAO7E,EAAE,kBACT8E,SAzJY1D,IAC1B,MAAM,KAAEb,EAAI,MAAEc,GAAUD,EAAEE,OAC1BjB,GAAiBkB,IAAI,IAChBA,EACH,CAAChB,GAAOc,KACP,EAoJwCM,SAAA,EAE7BC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAACnE,MAAM,SAAQM,SAAC,YACzBC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAACnE,MAAM,UAASM,SAAC,aAC1BC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAACnE,MAAM,QAAOM,SAAC,WACxBC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAACnE,MAAM,UAASM,SAAC,aAC1BC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAACnE,MAAM,UAASM,SAAC,aAC1BC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAACnE,MAAM,OAAMM,SAAC,YAExBV,EAAOP,OAAQkB,EAAAA,EAAAA,KAAC6D,EAAAA,EAAc,CAAA9D,SAAEV,EAAOP,aAI5CkB,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTC,UAAQ,EACRC,MAAO7E,EAAE,0BACTO,KAAK,eACL0E,KAAK,SACL5D,MAAOjB,EAAcO,aACrBmE,SAAU3D,EACV4D,QAAS9D,EAAON,aAChBqE,WAAY/D,EAAON,aACnBuE,WAAY,CACVC,WAAY,CAAEC,IAAK,SAKzBxD,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTE,MAAO7E,EAAE,wBACTO,KAAK,aACL0E,KAAK,OACL5D,MAAOjB,EAAcQ,WACrBkE,SAAU3D,EACV4D,QAAS9D,EAAOL,WAChBoE,WAAY/D,EAAOL,WACnB8E,gBAAiB,CAAEC,QAAQ,QAI/B/D,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTE,MAAO7E,EAAE,0BAA4B,cACrCO,KAAK,cACLc,MAAOjB,EAAcS,YACrBiE,SAAU3D,OAKdM,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG3C,SAAA,EAChBC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACI,QAAQ,KAAK8B,cAAY,EAAA5C,SAClC3B,EAAE,0BAA4B,4BAEjC4B,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,CAACxB,GAAI,CAAEnB,GAAI,SAGrBD,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTE,MAAO7E,EAAE,uBAAyB,mBAClCO,KAAK,WACLc,MAAOjB,EAAcU,SACrBgE,SAAU3D,OAIdS,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIG,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTE,MAAO7E,EAAE,uBAAyB,WAClCO,KAAK,WACLc,MAAOjB,EAAcW,SACrB+D,SAAU3D,OAKdS,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG3C,UAChBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRC,WAAS,EACTiB,WAAS,EACTC,KAAM,EACNhB,MAAO7E,EAAE,gBACTO,KAAK,QACLc,MAAOjB,EAAcY,MACrB8D,SAAU3D,OAKdS,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAItB,GAAI,CAAE8C,GAAI,GAAInE,UAC/BC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CACLD,QAAQ,YACRL,MAAM,UACN2D,KAAK,QACLpD,WAAWf,EAAAA,EAAAA,KAACoE,EAAAA,EAAQ,IACpBf,KAAK,SACLN,WAAS,EAAAhD,SAER3B,EAAE,4BAMT,C,sKCvVV,SAAeiG,EAAAA,EAAAA,IAA4BrE,EAAAA,EAAAA,KAAK,OAAQ,CACtDsE,EAAG,wJACD,a,cCPJ,MAAMC,EAAY,CAAC,QAAS,aAQtBC,GAA4BC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAmBE,IAAA,IAAC,MACpDC,GACDD,EAAA,OAAKE,EAAAA,EAAAA,GAAS,CACbnE,QAAS,OACToE,WAAY,QAAQF,EAAMpC,QAAQ,YAClCuC,YAAa,QAAQH,EAAMpC,QAAQ,aACX,UAAvBoC,EAAMI,QAAQC,KAAmB,CAClCC,gBAAiBN,EAAMI,QAAQG,KAAK,KACpC3E,MAAOoE,EAAMI,QAAQG,KAAK,MACxB,CACFD,gBAAiBN,EAAMI,QAAQG,KAAK,KACpC3E,MAAOoE,EAAMI,QAAQG,KAAK,MACzB,CACDC,aAAc,EACd,oBAAoBP,EAAAA,EAAAA,GAAS,CAAC,EAA0B,UAAvBD,EAAMI,QAAQC,KAAmB,CAChEC,gBAAiBN,EAAMI,QAAQG,KAAK,MAClC,CACFD,gBAAiBN,EAAMI,QAAQG,KAAK,OAEtC,YAAYN,EAAAA,EAAAA,GAAS,CACnBQ,UAAWT,EAAMU,QAAQ,IACD,UAAvBV,EAAMI,QAAQC,KAAmB,CAClCC,iBAAiBK,EAAAA,EAAAA,IAAUX,EAAMI,QAAQG,KAAK,KAAM,MAClD,CACFD,iBAAiBK,EAAAA,EAAAA,IAAUX,EAAMI,QAAQG,KAAK,KAAM,QAEtD,IACIK,GAA0Bf,EAAAA,EAAAA,IAAOgB,EAAPhB,CAAsB,CACpDiB,MAAO,GACPC,OAAQ,KA8CV,QAxCA,SAA6BC,GAC3B,MAAM,MACFC,EAAQ,CAAC,EAAC,UACVC,EAAY,CAAC,GACXF,EACJG,GAAaC,EAAAA,EAAAA,GAA8BJ,EAAOrB,GAC9C0B,EAAaL,EACnB,OAAoB5F,EAAAA,EAAAA,KAAK,KAAM,CAC7BD,UAAuBC,EAAAA,EAAAA,KAAKwE,GAA2BK,EAAAA,EAAAA,GAAS,CAC9DqB,aAAa,GACZH,EAAY,CACbE,WAAYA,EACZlG,UAAuBC,EAAAA,EAAAA,KAAKwF,GAAyBX,EAAAA,EAAAA,GAAS,CAC5DsB,GAAIN,EAAMO,cACVH,WAAYA,GACXH,EAAUO,oBAGnB,E,wBC/DO,SAASC,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,CACA,MACA,GAD2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,OAAQ,KAAM,KAAM,cCDnFlC,EAAY,CAAC,WAAY,YAAa,YAAa,QAAS,YAAa,aAAc,qBAAsB,sBAAuB,WAAY,aAyBhJmC,GAAkBjC,EAAAA,EAAAA,IAAOhE,EAAAA,EAAY,CACzC9B,KAAM,iBACN4H,KAAM,OACNI,kBAAmBA,CAACf,EAAOgB,IAClB,CAAC,CACN,CAAC,MAAMC,EAAmBC,MAAOF,EAAOE,IACvCF,EAAOG,OANUtC,CAQrB,CAAC,GACEuC,GAAgBvC,EAAAA,EAAAA,IAAO,KAAM,CACjC9F,KAAM,iBACN4H,KAAM,KACNI,kBAAmBA,CAACf,EAAOgB,IAAWA,EAAOK,IAHzBxC,CAInB,CACD/D,QAAS,OACTwG,SAAU,OACVtG,WAAY,SACZuG,QAAS,EACTC,OAAQ,EACRC,UAAW,SAEPC,GAAuB7C,EAAAA,EAAAA,IAAO,KAAM,CACxC9F,KAAM,iBACN4H,KAAM,YACNI,kBAAmBA,CAACf,EAAOgB,IAAWA,EAAOzG,WAHlBsE,CAI1B,CACD/D,QAAS,OACT6G,WAAY,OACZzC,WAAY,EACZC,YAAa,IAEf,SAASyC,EAAiBC,EAAOC,EAAWvH,EAAW8F,GACrD,OAAOwB,EAAME,QAAO,CAACC,EAAKC,EAASC,KAC7BA,EAAQL,EAAMzF,OAAS,EACzB4F,EAAMA,EAAIG,OAAOF,GAAsB7H,EAAAA,EAAAA,KAAKsH,EAAsB,CAChE,eAAe,EACfI,UAAWA,EACXzB,WAAYA,EACZlG,SAAUI,GACT,aAAa2H,MAEhBF,EAAII,KAAKH,GAEJD,IACN,GACL,CACA,MAqKA,EArKiCK,EAAAA,YAAiB,SAAqBC,EAASC,GAC9E,MAAMvC,GAAQwC,EAAAA,EAAAA,GAAc,CAC1BxC,MAAOsC,EACPvJ,KAAM,oBAEF,SACFoB,EAAQ,UACR2H,EAAS,UACTW,EAAY,MAAK,MACjBxC,EAAQ,CAAC,EAAC,UACVC,EAAY,CAAC,EAAC,WACdwC,EAAa,YAAW,mBACxBC,EAAqB,EAAC,oBACtBC,EAAsB,EAAC,SACvBC,EAAW,EAAC,UACZtI,EAAY,KACVyF,EACJ8C,GAAQ1C,EAAAA,EAAAA,GAA8BJ,EAAOrB,IACxCoE,EAAUC,GAAeX,EAAAA,UAAe,GACzChC,GAAapB,EAAAA,EAAAA,GAAS,CAAC,EAAGe,EAAO,CACrCyC,YACAM,WACAL,aACAC,qBACAC,sBACAC,WACAtI,cAEI0I,EAtFkB5C,KACxB,MAAM,QACJ4C,GACE5C,EAOJ,OAAO6C,EAAAA,EAAAA,GANO,CACZ/B,KAAM,CAAC,QACPD,GAAI,CAAC,MACLG,GAAI,CAAC,MACL9G,UAAW,CAAC,cAEemG,EAA4BuC,EAAQ,EA4EjDE,CAAkB9C,GAC5B+C,GAAyBC,EAAAA,EAAAA,GAAa,CAC1CC,YAAarD,EAAMO,cACnB+C,kBAAmBrD,EAAUO,cAC7BJ,eAEImD,EAAUnB,EAAAA,OAAa,MAkCvBoB,EAAWpB,EAAAA,SAAeqB,QAAQvJ,GAAUwJ,QAAOC,GAMnCvB,EAAAA,eAAqBuB,KACxCC,KAAI,CAACD,EAAO1B,KAAuB9H,EAAAA,EAAAA,KAAK,KAAM,CAC/C0H,UAAWmB,EAAQ/B,GACnB/G,SAAUyJ,GACT,SAAS1B,OACZ,OAAoB9H,EAAAA,EAAAA,KAAK0G,GAAiB7B,EAAAA,EAAAA,GAAS,CACjDsD,IAAKA,EACLE,UAAWA,EACX7H,MAAO,iBACPkH,WAAWgC,EAAAA,EAAAA,GAAKb,EAAQ9B,KAAMW,GAC9BzB,WAAYA,GACXyC,EAAO,CACR3I,UAAuBC,EAAAA,EAAAA,KAAKgH,EAAe,CACzCU,UAAWmB,EAAQ5B,GACnBkB,IAAKiB,EACLnD,WAAYA,EACZlG,SAAUyH,EAAiBmB,GAAYF,GAAYY,EAASrH,QAAUyG,EAAWY,EAvDnDA,IAgB5Bb,EAAsBD,GAAsBc,EAASrH,OAIhDqH,EAEF,IAAIA,EAASM,MAAM,EAAGnB,IAAmCxI,EAAAA,EAAAA,KAAK4J,EAAqB,CACxF,aAActB,EACdzC,MAAO,CACLO,cAAeP,EAAMO,eAEvBN,UAAW,CACTO,cAAe2C,GAEjB/H,QA7BwB4I,KACxBjB,GAAY,GAMZ,MAAMkB,EAAYV,EAAQvB,QAAQkC,cAAc,6BAC5CD,GACFA,EAAUE,OACZ,GAoBC,eAAgBX,EAASM,MAAMN,EAASrH,OAASuG,EAAoBc,EAASrH,SAwBaiI,CAA0BZ,GAAWR,EAAQ1I,UAAWA,EAAW8F,OAGrK,G,yDCpKA,SAAe5B,EAAAA,EAAAA,IAA4BrE,EAAAA,EAAAA,KAAK,OAAQ,CACtDsE,EAAG,mJACD,O,yDCFJ,SAAeD,EAAAA,EAAAA,IAA4BrE,EAAAA,EAAAA,KAAK,OAAQ,CACtDsE,EAAG,iEACD,Y","sources":["pages/InventoryAdd.tsx","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/ArrowBack.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper, \n  TextField, \n  Button, \n  Grid, \n  MenuItem, \n  FormControl, \n  InputLabel, \n  Select,\n  FormHelperText,\n  Breadcrumbs,\n  Divider,\n  InputAdornment\n} from '@mui/material';\nimport { \n  Save as SaveIcon, \n  ArrowBack as ArrowBackIcon\n} from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, Link } from 'react-router-dom';\n\n// Type definition for translation function to prevent infinite type instantiation\ntype TFunction = (key: string) => string;\n\n// Inventory item type\ninterface InventoryData {\n  name: string;\n  category: string;\n  quantity: string;\n  unit: string;\n  reorderLevel: string;\n  expiryDate: string;\n  description: string;\n  location: string;\n  supplier: string;\n  notes: string;\n}\n\nconst InventoryAdd: React.FC = () => {\n  // Using a different approach to prevent type instantiation issues\n  const translationHook = useTranslation();\n  const t = translationHook.t as unknown as TFunction;\n  \n  const navigate = useNavigate();\n  \n  // Initial form state\n  const [inventoryData, setInventoryData] = useState<InventoryData>({\n    name: '',\n    category: '',\n    quantity: '',\n    unit: 'pieces',\n    reorderLevel: '',\n    expiryDate: '',\n    description: '',\n    location: '',\n    supplier: '',\n    notes: ''\n  });\n  \n  // Form validation state\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  \n  const handleBack = () => {\n    navigate('/inventory');\n  };\n  \n  // Handle text field changes\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setInventoryData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error when field is edited\n    if (errors[name]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n  \n  // Handle select field changes\n  const handleSelectChange = (e: any) => {\n    const { name, value } = e.target;\n    setInventoryData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  // Form validation\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n    \n    if (!inventoryData.name.trim()) {\n      newErrors.name = t('validation.required') || 'Name is required';\n    }\n    \n    if (!inventoryData.category.trim()) {\n      newErrors.category = t('validation.required') || 'Category is required';\n    }\n    \n    if (!inventoryData.quantity.trim()) {\n      newErrors.quantity = t('validation.required') || 'Quantity is required';\n    } else if (isNaN(Number(inventoryData.quantity)) || Number(inventoryData.quantity) < 0) {\n      newErrors.quantity = t('validation.quantity') || 'Quantity must be a non-negative number';\n    }\n    \n    if (!inventoryData.unit.trim()) {\n      newErrors.unit = t('validation.required') || 'Unit is required';\n    }\n    \n    if (!inventoryData.reorderLevel.trim()) {\n      newErrors.reorderLevel = t('validation.required') || 'Reorder level is required';\n    } else if (isNaN(Number(inventoryData.reorderLevel)) || Number(inventoryData.reorderLevel) < 0) {\n      newErrors.reorderLevel = t('validation.quantity') || 'Reorder level must be a non-negative number';\n    }\n    \n    // Expiry date is optional but if provided should be in the future\n    if (inventoryData.expiryDate) {\n      const today = new Date();\n      const expiryDate = new Date(inventoryData.expiryDate);\n      if (expiryDate < today) {\n        newErrors.expiryDate = t('validation.futureDate') || 'Expiry date must be in the future';\n      }\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  \n  // Form submission\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      // In a real application, you would send the data to an API\n      console.log('Inventory data:', inventoryData);\n      \n      // Navigate back to inventory page\n      navigate('/inventory', { state: { success: true, message: 'Item added successfully' } });\n    }\n  };\n  \n  return (\n    <Box>\n      {/* Header with breadcrumbs */}\n      <Box mb={3}>\n        <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n          <Link to=\"/dashboard\" style={{ textDecoration: 'none', color: 'inherit' }}>\n            {t('navigation.dashboard')}\n          </Link>\n          <Link to=\"/inventory\" style={{ textDecoration: 'none', color: 'inherit' }}>\n            {t('inventory.title')}\n          </Link>\n          <Typography color=\"textPrimary\">{t('inventory.addItem')}</Typography>\n        </Breadcrumbs>\n      </Box>\n      \n      {/* Page title */}\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\">\n          {t('inventory.addItem')}\n        </Typography>\n        <Button \n          startIcon={<ArrowBackIcon />} \n          onClick={handleBack}\n          variant=\"outlined\"\n        >\n          {t('common.back')}\n        </Button>\n      </Box>\n      \n      {/* Form */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            {/* Basic Information */}\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                {t('inventory.itemDetails')}\n              </Typography>\n              <Divider sx={{ mb: 2 }} />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                required\n                label={t('inventory.name')}\n                name=\"name\"\n                value={inventoryData.name}\n                onChange={handleChange}\n                error={!!errors.name}\n                helperText={errors.name}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                required\n                label={t('inventory.category')}\n                name=\"category\"\n                value={inventoryData.category}\n                onChange={handleChange}\n                error={!!errors.category}\n                helperText={errors.category}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={4}>\n              <TextField\n                fullWidth\n                required\n                label={t('inventory.quantity')}\n                name=\"quantity\"\n                type=\"number\"\n                value={inventoryData.quantity}\n                onChange={handleChange}\n                error={!!errors.quantity}\n                helperText={errors.quantity}\n                InputProps={{\n                  inputProps: { min: 0 }\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={4}>\n              <FormControl fullWidth required error={!!errors.unit}>\n                <InputLabel>{t('inventory.unit')}</InputLabel>\n                <Select\n                  name=\"unit\"\n                  value={inventoryData.unit}\n                  label={t('inventory.unit')}\n                  onChange={handleSelectChange}\n                >\n                  <MenuItem value=\"pieces\">Pieces</MenuItem>\n                  <MenuItem value=\"packets\">Packets</MenuItem>\n                  <MenuItem value=\"boxes\">Boxes</MenuItem>\n                  <MenuItem value=\"tablets\">Tablets</MenuItem>\n                  <MenuItem value=\"bottles\">Bottles</MenuItem>\n                  <MenuItem value=\"kits\">Kits</MenuItem>\n                </Select>\n                {errors.unit && <FormHelperText>{errors.unit}</FormHelperText>}\n              </FormControl>\n            </Grid>\n            \n            <Grid item xs={12} md={4}>\n              <TextField\n                fullWidth\n                required\n                label={t('inventory.reorderLevel')}\n                name=\"reorderLevel\"\n                type=\"number\"\n                value={inventoryData.reorderLevel}\n                onChange={handleChange}\n                error={!!errors.reorderLevel}\n                helperText={errors.reorderLevel}\n                InputProps={{\n                  inputProps: { min: 0 }\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={t('inventory.expiryDate')}\n                name=\"expiryDate\"\n                type=\"date\"\n                value={inventoryData.expiryDate}\n                onChange={handleChange}\n                error={!!errors.expiryDate}\n                helperText={errors.expiryDate}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={t('inventory.description') || 'Description'}\n                name=\"description\"\n                value={inventoryData.description}\n                onChange={handleChange}\n              />\n            </Grid>\n            \n            {/* Additional Information */}\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                {t('common.additionalInfo') || 'Additional Information'}\n              </Typography>\n              <Divider sx={{ mb: 2 }} />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={t('inventory.location') || 'Storage Location'}\n                name=\"location\"\n                value={inventoryData.location}\n                onChange={handleChange}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={t('inventory.supplier') || 'Supplier'}\n                name=\"supplier\"\n                value={inventoryData.supplier}\n                onChange={handleChange}\n              />\n            </Grid>\n            \n            {/* Notes */}\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                multiline\n                rows={4}\n                label={t('common.notes')}\n                name=\"notes\"\n                value={inventoryData.notes}\n                onChange={handleChange}\n              />\n            </Grid>\n            \n            {/* Submit Button */}\n            <Grid item xs={12} sx={{ mt: 2 }}>\n              <Button \n                variant=\"contained\" \n                color=\"primary\" \n                size=\"large\" \n                startIcon={<SaveIcon />} \n                type=\"submit\"\n                fullWidth\n              >\n                {t('common.save')}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default InventoryAdd; ","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');"],"names":["InventoryAdd","t","useTranslation","navigate","useNavigate","inventoryData","setInventoryData","useState","name","category","quantity","unit","reorderLevel","expiryDate","description","location","supplier","notes","errors","setErrors","handleChange","e","value","target","prev","newErrors","_jsxs","Box","children","_jsx","mb","Breadcrumbs","separator","Link","to","style","textDecoration","color","Typography","display","justifyContent","alignItems","variant","Button","startIcon","ArrowBackIcon","onClick","handleBack","Paper","sx","p","onSubmit","preventDefault","validateForm","trim","isNaN","Number","today","Date","Object","keys","length","console","log","state","success","message","Grid","container","spacing","item","xs","gutterBottom","Divider","md","TextField","fullWidth","required","label","onChange","error","helperText","type","InputProps","inputProps","min","FormControl","InputLabel","Select","MenuItem","FormHelperText","InputLabelProps","shrink","multiline","rows","mt","size","SaveIcon","createSvgIcon","d","_excluded","BreadcrumbCollapsedButton","styled","ButtonBase","_ref","theme","_extends","marginLeft","marginRight","palette","mode","backgroundColor","grey","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","props","slots","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","concat","push","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","map","clsx","slice","BreadcrumbCollapsed","handleClickExpand","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}