{"version":3,"file":"static/js/821.d2bf1c34.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","pages/ItemDetail.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/ArrowBack.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import React, { useEffect, useState } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper, \n  Button,\n  Breadcrumbs,\n  Link,\n  Divider,\n  Card,\n  CardContent,\n  Chip,\n  Grid\n} from '@mui/material';\nimport {\n  ArrowBack as ArrowBackIcon,\n  Inventory as InventoryIcon,\n  Event as EventIcon,\n  AttachMoney as MoneyIcon,\n  Policy as PolicyIcon\n} from '@mui/icons-material';\nimport { Link as RouterLink, useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\n// Type definition for translation function to prevent infinite type instantiation\ntype TFunction = (key: string) => string;\n\n// Mock data mapping\nconst mockDataMap: Record<string, Record<string, any>> = {\n  inventory: {\n    '12': {\n      id: '12',\n      name: 'Sanitary Pads',\n      category: 'Hygiene',\n      quantity: 150,\n      unit: 'packets',\n      addedBy: 'Sunita Devi',\n      addedOn: '2023-05-15',\n      description: 'Regular size sanitary pads for menstrual hygiene',\n      reorderLevel: 50,\n      expiryDate: '2026-05-15'\n    },\n    '8': {\n      id: '8',\n      name: 'Iron Tablets',\n      category: 'Nutrition',\n      quantity: 300,\n      unit: 'tablets',\n      addedBy: 'Anjali Sharma',\n      addedOn: '2023-04-10',\n      description: 'Iron supplements for pregnant women',\n      reorderLevel: 100,\n      expiryDate: '2025-02-10'\n    }\n  },\n  events: {\n    '1': {\n      id: '1',\n      title: 'Awareness Camp',\n      date: '2025-05-15',\n      location: 'Village Community Hall',\n      organizer: 'Pratima Singh',\n      attendees: 35,\n      status: 'upcoming',\n      description: 'Health awareness camp focusing on maternal health'\n    },\n    '2': {\n      id: '2',\n      title: 'Educational Session',\n      date: '2023-04-22',\n      location: 'Primary School',\n      organizer: 'Geeta Kumari',\n      attendees: 28,\n      status: 'completed',\n      description: 'Educational session about menstrual hygiene for teenage girls'\n    },\n    '3': {\n      id: '3',\n      title: 'Health Checkup Camp',\n      date: '2025-05-23',\n      location: 'Primary Health Center',\n      organizer: 'Dr. Rekha Singh',\n      attendees: 42,\n      status: 'upcoming',\n      description: 'General health checkup camp for women and children'\n    },\n    '5': {\n      id: '5',\n      title: 'Health Awareness Event',\n      date: '2023-05-23',\n      location: 'Community Center',\n      organizer: 'Sunita Devi',\n      attendees: 0,\n      status: 'upcoming',\n      description: 'Health awareness event about nutrition during pregnancy'\n    }\n  },\n  finance: {\n    'reports/1': {\n      id: '1',\n      title: 'Quarterly Financial Summary',\n      date: '2023-03-31',\n      prepared: 'Geeta Kumari',\n      totalIncome: 25000,\n      totalExpense: 18500,\n      balance: 6500,\n      description: 'Summary of financial activities for Q1 2023'\n    },\n    'reports/2': {\n      id: '2',\n      title: 'Monthly Financial Report',\n      date: '2023-04-30',\n      prepared: 'Geeta Kumari',\n      totalIncome: 8200,\n      totalExpense: 6100,\n      balance: 2100,\n      description: 'Financial report for April 2023'\n    }\n  },\n  schemes: {\n    '8': {\n      id: '8',\n      name: 'Maternal Health Scheme',\n      launchedBy: 'Ministry of Health',\n      launchDate: '2023-04-28',\n      eligibility: 'Pregnant women from rural areas',\n      benefits: 'Free health checkups, nutrition supplements, and financial aid',\n      applicationProcess: 'Apply through local health center with required documents',\n      documents: ['Aadhaar Card', 'Bank Account', 'Pregnancy Certificate']\n    }\n  }\n};\n\nconst ItemDetail: React.FC = () => {\n  // Using a different approach to prevent type instantiation issues\n  const translationHook = useTranslation();\n  const t = translationHook.t as unknown as TFunction;\n  \n  const { type, id } = useParams<{ type: string; id: string }>();\n  const navigate = useNavigate();\n  const [item, setItem] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!type || !id) {\n      setError('Invalid URL parameters');\n      setLoading(false);\n      return;\n    }\n\n    // Simulate data fetching\n    setTimeout(() => {\n      try {\n        // Check if the type and ID are valid\n        if (mockDataMap[type] && mockDataMap[type][id]) {\n          setItem(mockDataMap[type][id]);\n        } else {\n          setError('Item not found');\n        }\n      } catch (err) {\n        setError('Error loading item details');\n      } finally {\n        setLoading(false);\n      }\n    }, 500);\n  }, [type, id]);\n\n  const getTypeLabel = () => {\n    switch (type) {\n      case 'inventory':\n        return t('inventory.title') || 'Inventory';\n      case 'events':\n        return t('events.title') || 'Events';\n      case 'finance':\n        return t('finance.title') || 'Finance';\n      case 'schemes':\n        return t('schemes.title') || 'Schemes';\n      default:\n        return 'Details';\n    }\n  };\n\n  const getTypeIcon = () => {\n    switch (type) {\n      case 'inventory':\n        return <InventoryIcon />;\n      case 'events':\n        return <EventIcon />;\n      case 'finance':\n        return <MoneyIcon />;\n      case 'schemes':\n        return <PolicyIcon />;\n      default:\n        return null;\n    }\n  };\n\n  const getTypeColor = () => {\n    switch (type) {\n      case 'inventory':\n        return 'primary';\n      case 'events':\n        return 'secondary';\n      case 'finance':\n        return 'success';\n      case 'schemes':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  const handleBack = () => {\n    if (type) {\n      navigate(`/${type}`);\n    } else {\n      navigate('/dashboard');\n    }\n  };\n\n  const renderItemDetails = () => {\n    if (!item) return null;\n\n    switch (type) {\n      case 'inventory':\n        return (\n          <>\n            <Box mb={3} display=\"flex\" alignItems=\"center\">\n              <Typography variant=\"h4\" component=\"h1\">\n                {item.name}\n              </Typography>\n              <Chip \n                label={item.category} \n                color={getTypeColor() as \"default\" | \"primary\" | \"secondary\" | \"error\" | \"info\" | \"success\" | \"warning\"} \n                sx={{ ml: 2 }} \n              />\n            </Box>\n\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {t('inventory.itemDetails') || 'Item Details'}\n                    </Typography>\n                    <Divider sx={{ mb: 2 }} />\n                    \n                    <Box sx={{ '& > div': { mb: 1.5 } }}>\n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('inventory.quantity') || 'Quantity'}:\n                        </Typography>{' '}\n                        {item.quantity} {item.unit}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('inventory.reorderLevel') || 'Reorder Level'}:\n                        </Typography>{' '}\n                        {item.reorderLevel} {item.unit}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('inventory.expiryDate') || 'Expiry Date'}:\n                        </Typography>{' '}\n                        {item.expiryDate ? new Date(item.expiryDate).toLocaleDateString() : 'N/A'}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('common.description') || 'Description'}:\n                        </Typography>{' '}\n                        {item.description}\n                      </Box>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n              \n              <Grid item xs={12} md={6}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {t('inventory.addedInfo') || 'Added Info'}\n                    </Typography>\n                    <Divider sx={{ mb: 2 }} />\n                    \n                    <Box sx={{ '& > div': { mb: 1.5 } }}>\n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('inventory.addedBy') || 'Added By'}:\n                        </Typography>{' '}\n                        {item.addedBy}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('inventory.addedOn') || 'Added On'}:\n                        </Typography>{' '}\n                        {new Date(item.addedOn).toLocaleDateString()}\n                      </Box>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </>\n        );\n      \n      case 'events':\n        return (\n          <>\n            <Box mb={3} display=\"flex\" alignItems=\"center\">\n              <Typography variant=\"h4\" component=\"h1\">\n                {item.title}\n              </Typography>\n              <Chip \n                label={item.status} \n                color={item.status === 'upcoming' ? 'warning' : (item.status === 'completed' ? 'success' : 'default')}\n                sx={{ ml: 2 }} \n              />\n            </Box>\n\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {t('events.eventDetails') || 'Event Details'}\n                    </Typography>\n                    <Divider sx={{ mb: 2 }} />\n                    \n                    <Box sx={{ '& > div': { mb: 1.5 } }}>\n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('events.date') || 'Date'}:\n                        </Typography>{' '}\n                        {new Date(item.date).toLocaleDateString()}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('events.location') || 'Location'}:\n                        </Typography>{' '}\n                        {item.location}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('events.organizer') || 'Organizer'}:\n                        </Typography>{' '}\n                        {item.organizer}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('events.attendees') || 'Expected Attendees'}:\n                        </Typography>{' '}\n                        {item.attendees}\n                      </Box>\n                      \n                      <Box>\n                        <Typography component=\"span\" fontWeight=\"bold\">\n                          {t('common.description') || 'Description'}:\n                        </Typography>{' '}\n                        {item.description}\n                      </Box>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </>\n        );\n      \n      // Add other cases for finance and schemes\n      \n      default:\n        return (\n          <Typography>\n            {t('common.detailsNotAvailable') || 'Details are not available for this item type.'}\n          </Typography>\n        );\n    }\n  };\n\n  return (\n    <Box>\n      <Breadcrumbs aria-label=\"breadcrumb\" sx={{ mb: 2 }}>\n        <Link component={RouterLink} to=\"/dashboard\" underline=\"hover\" color=\"inherit\">\n          {t('navigation.dashboard') || 'Dashboard'}\n        </Link>\n        <Link component={RouterLink} to={`/${type}`} underline=\"hover\" color=\"inherit\">\n          {getTypeLabel()}\n        </Link>\n        <Typography color=\"text.primary\">\n          {item?.name || item?.title || id}\n        </Typography>\n      </Breadcrumbs>\n\n      <Button \n        startIcon={<ArrowBackIcon />} \n        variant=\"outlined\" \n        onClick={handleBack}\n        sx={{ mb: 3 }}\n      >\n        {t('common.back') || 'Back'}\n      </Button>\n\n      {loading ? (\n        <Typography>{t('common.loading') || 'Loading...'}</Typography>\n      ) : error ? (\n        <Typography color=\"error\">{error}</Typography>\n      ) : (\n        renderItemDetails()\n      )}\n    </Box>\n  );\n};\n\nexport default ItemDetail; ","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","createSvgIcon","d","BreadcrumbCollapsedButton","ButtonBase","_ref","theme","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","slots","slotProps","otherProps","children","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","BreadcrumbsRoot","Typography","breadcrumbsClasses","li","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","reduce","acc","current","index","length","concat","push","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","expanded","setExpanded","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","map","slice","BreadcrumbCollapsed","onClick","handleClickExpand","focusable","querySelector","focus","renderItemsBeforeAndAfter","mockDataMap","inventory","id","category","quantity","unit","addedBy","addedOn","description","reorderLevel","expiryDate","events","title","date","location","organizer","attendees","status","finance","prepared","totalIncome","totalExpense","balance","schemes","launchedBy","launchDate","eligibility","benefits","applicationProcess","documents","ItemDetail","t","useTranslation","type","useParams","navigate","useNavigate","item","setItem","useState","loading","setLoading","error","setError","useEffect","setTimeout","err","getTypeColor","_jsxs","Box","Breadcrumbs","sx","mb","Link","RouterLink","to","underline","getTypeLabel","Button","startIcon","ArrowBackIcon","variant","handleBack","renderItemDetails","_Fragment","Chip","label","ml","Grid","container","xs","md","Card","CardContent","gutterBottom","Divider","fontWeight","Date","toLocaleDateString","getCardContentUtilityClass","CardContentRoot","paddingBottom"],"sourceRoot":""}